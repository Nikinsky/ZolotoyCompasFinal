# Generated by Django 5.1.1 on 2024-10-18 17:48

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attractions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('at_name', models.CharField(max_length=32)),
                ('at_name_en', models.CharField(max_length=32, null=True)),
                ('at_name_tr', models.CharField(max_length=32, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='KG')),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_tr', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Culture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('culture_name', models.CharField(max_length=32)),
                ('culture_name_en', models.CharField(max_length=32, null=True)),
                ('culture_name_tr', models.CharField(max_length=32, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_tr', models.TextField(null=True)),
                ('image', models.ImageField(upload_to='img_culture/')),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency_name', models.CharField(max_length=32)),
                ('currency_name_en', models.CharField(max_length=32, null=True)),
                ('currency_name_tr', models.CharField(max_length=32, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_tr', models.TextField(null=True)),
                ('image', models.ImageField(upload_to='img_currency/')),
            ],
        ),
        migrations.CreateModel(
            name='Games',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_name', models.CharField(max_length=32)),
                ('game_name_en', models.CharField(max_length=32, null=True)),
                ('game_name_tr', models.CharField(max_length=32, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_tr', models.TextField(null=True)),
                ('image', models.ImageField(upload_to='img_games/')),
            ],
        ),
        migrations.CreateModel(
            name='HandCrafts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('handcraft_name', models.CharField(max_length=32)),
                ('handcraft_name_en', models.CharField(max_length=32, null=True)),
                ('handcraft_name_tr', models.CharField(max_length=32, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_tr', models.TextField(null=True)),
                ('image', models.ImageField(upload_to='img_crafts/')),
            ],
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_name', models.CharField(max_length=32)),
                ('hotel_name_en', models.CharField(max_length=32, null=True)),
                ('hotel_name_tr', models.CharField(max_length=32, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_tr', models.TextField(null=True)),
                ('short_period', models.IntegerField(default=1000)),
                ('medium_period', models.IntegerField(default=1500)),
                ('long_period', models.IntegerField(default=2000)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='KG')),
            ],
        ),
        migrations.CreateModel(
            name='Kitchen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_kitchen', models.CharField(max_length=32)),
                ('name_kitchen_en', models.CharField(max_length=32, null=True)),
                ('name_kitchen_tr', models.CharField(max_length=32, null=True)),
                ('category', models.CharField(max_length=32)),
                ('category_en', models.CharField(max_length=32, null=True)),
                ('category_tr', models.CharField(max_length=32, null=True)),
                ('price_range', models.CharField(max_length=32)),
                ('specialized_menu', models.CharField(max_length=100)),
                ('specialized_menu_en', models.CharField(max_length=100, null=True)),
                ('specialized_menu_tr', models.CharField(max_length=100, null=True)),
                ('meal_time', models.CharField(max_length=100)),
                ('meal_time_en', models.CharField(max_length=100, null=True)),
                ('meal_time_tr', models.CharField(max_length=100, null=True)),
                ('address', models.CharField(max_length=32)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='KG')),
            ],
        ),
        migrations.CreateModel(
            name='NationalClothes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clothes_name', models.CharField(max_length=32)),
                ('clothes_name_en', models.CharField(max_length=32, null=True)),
                ('clothes_name_tr', models.CharField(max_length=32, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_tr', models.TextField(null=True)),
                ('image', models.ImageField(upload_to='img_clothes/')),
            ],
        ),
        migrations.CreateModel(
            name='NationalFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nationalfood_name', models.CharField(max_length=32)),
                ('nationalfood_name_en', models.CharField(max_length=32, null=True)),
                ('nationalfood_name_tr', models.CharField(max_length=32, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_tr', models.TextField(null=True)),
                ('image', models.ImageField(upload_to='img_nationalfood/')),
            ],
        ),
        migrations.CreateModel(
            name='NationalInstruments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.CharField(max_length=32)),
                ('instrument_en', models.CharField(max_length=32, null=True)),
                ('instrument_tr', models.CharField(max_length=32, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_tr', models.TextField(null=True)),
                ('image', models.ImageField(upload_to='img_instruments/')),
            ],
        ),
        migrations.CreateModel(
            name='Places',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('places_name', models.CharField(max_length=32)),
                ('places_name_en', models.CharField(max_length=32, null=True)),
                ('places_name_tr', models.CharField(max_length=32, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_tr', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(max_length=32, unique=True)),
                ('region_name_en', models.CharField(max_length=32, null=True, unique=True)),
                ('region_name_tr', models.CharField(max_length=32, null=True, unique=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_tr', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='KG')),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('address', models.CharField(blank=True, max_length=32, null=True)),
                ('address_en', models.CharField(blank=True, max_length=32, null=True)),
                ('address_tr', models.CharField(blank=True, max_length=32, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=32)),
                ('street_en', models.CharField(max_length=32, null=True)),
                ('street_tr', models.CharField(max_length=32, null=True)),
                ('city', models.CharField(max_length=32)),
                ('city_en', models.CharField(max_length=32, null=True)),
                ('city_tr', models.CharField(max_length=32, null=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AttractionsPhotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('attraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attraction_photos', to='store.attractions')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Conditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_conditions', models.CharField(max_length=32)),
                ('icon', models.ImageField(upload_to='icon_conditions/')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditions', to='store.hotel')),
            ],
        ),
        migrations.CreateModel(
            name='HotelPhotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos_hotel', to='store.hotel')),
            ],
        ),
        migrations.CreateModel(
            name='KitchenPhotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('kitchen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kit_photos', to='store.kitchen')),
            ],
        ),
        migrations.CreateModel(
            name='Offered_amenities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_offered', models.CharField(max_length=32)),
                ('icon', models.ImageField(upload_to='icons_offered/')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offereds', to='store.hotel')),
            ],
        ),
        migrations.AddField(
            model_name='kitchen',
            name='places',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.places'),
        ),
        migrations.AddField(
            model_name='hotel',
            name='places',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.places'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=32)),
                ('title', models.CharField(max_length=200)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_tr', models.CharField(max_length=200, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_tr', models.TextField(null=True)),
                ('date', models.DateTimeField()),
                ('location', models.CharField(max_length=255)),
                ('ticket_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='event_images/')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.categoryevent')),
                ('places', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='store.places')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attractions', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.attractions')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='store.cart')),
                ('hotel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.hotel')),
                ('kitchen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.kitchen')),
                ('places', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.places')),
            ],
        ),
        migrations.AddField(
            model_name='attractions',
            name='att_region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.places'),
        ),
        migrations.CreateModel(
            name='PlacesPhotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='img_places/')),
                ('places', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places_photos', to='store.places')),
            ],
        ),
        migrations.AddField(
            model_name='places',
            name='region_places',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.region'),
        ),
        migrations.CreateModel(
            name='RegionFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food_name', models.CharField(max_length=32)),
                ('food_name_en', models.CharField(max_length=32, null=True)),
                ('food_name_tr', models.CharField(max_length=32, null=True)),
                ('include_food', models.TextField()),
                ('include_food_en', models.TextField(null=True)),
                ('include_food_tr', models.TextField(null=True)),
                ('description_name', models.TextField()),
                ('description_name_en', models.TextField(null=True)),
                ('description_name_tr', models.TextField(null=True)),
                ('image', models.ImageField(upload_to='img_region_food/')),
                ('region_food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reg_food', to='store.region')),
            ],
        ),
        migrations.CreateModel(
            name='RegionPhotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='img_region/')),
                ('region_photos', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reg_photos', to='store.region')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_type', models.CharField(choices=[('hotel', 'Hotel'), ('restaurant', 'Restaurant'), ('attraction', 'Attraction'), ('place', 'Place')], max_length=50)),
                ('comment', models.TextField()),
                ('rating', models.IntegerField(blank=True, choices=[(1, 'Плохо'), (2, 'Удовлетворительно'), (3, 'Средне'), (4, 'Хорошо'), (5, 'Отлично')], null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('likes', models.PositiveIntegerField(default=0)),
                ('attraction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='att_reviews', to='store.attractions')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('hotel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hotels', to='store.hotel')),
                ('places', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews_places', to='store.places')),
                ('restaurant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kitchen', to='store.kitchen')),
            ],
        ),
        migrations.CreateModel(
            name='PhotosReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_photos', to='store.review')),
            ],
        ),
        migrations.CreateModel(
            name='Safety_and_hydigene',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_safety', models.CharField(max_length=32)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='icons_safety/')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='safetys', to='store.hotel')),
            ],
        ),
    ]
